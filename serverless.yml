# NOTE: update this with your service name
service: notes-app-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: ap-southeast-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
    tableName: notes
    stripeSecretKey: ${env:STRIPE_SECRET_KEY}

  iamRoleStatements:    
    - Effect: Allow      
      Action:        
        - dynamodb:DescribeTable        
        - dynamodb:Query        
        - dynamodb:Scan        
        - dynamodb:GetItem
        - dynamodb:PutItem       
        - dynamodb:UpdateItem        
        - dynamodb:DeleteItem      
      Resource: "arn:aws:dynamodb:ap-southeast-2:178799547101:table/notes"

functions:
  create:
    handler: actions/create.main
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: actions/get.main
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam
  list:
    handler: actions/list.main
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam
  update:
    handler: actions/update.main
    events:
      - http:
          path: notes/{id}
          method: put
          cors: true
          authorizer: aws_iam
  delete:
    handler: actions/delete.main
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  billing:
    # Defines an HTTP API endpoint that calls the main function in billing.js
    # Make sure this is indented correctly. This block falls under the block.
    # Now before we can test our API we need to load our Stripe secret key in our environment.
    # For help and discussion ! Comments on this chapter (https://discourse.serverlessstack.com/t/add-a-billing-api/170)
    # - path: url path is /billing    # - method: POST request 
    handler: actions/billing.main
    events:
      - http:
          path: billing
          method: post
          cors: true
          authorizer: aws_iam

resources:
  - ${file(resources/api-gateway-errors.yml)}
